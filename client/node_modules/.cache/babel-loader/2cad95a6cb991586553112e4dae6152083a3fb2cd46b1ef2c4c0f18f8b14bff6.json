{"ast":null,"code":"var _jsxFileName = \"/Users/j/Desktop/CAB/20Design-MERN/client/src/components/Redpage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Redpage() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [debouncedSearchTerm, setDebouncedSearchTerm] = useState(\"\");\n  useEffect(() => {\n    const fetchAllPosts = async () => {\n      const {\n        data\n      } = await axios.get(\"http://localhost:5002/api/posts/all\");\n      if (data) {\n        setPosts(data.allPosts);\n      }\n    };\n    fetchAllPosts();\n  }, []);\n  useEffect(() => {\n    const debounceSearch = setTimeout(() => {\n      setDebouncedSearchTerm(searchTerm);\n    }, 500);\n    return () => {\n      clearTimeout(debounceSearch);\n    };\n  }, [searchTerm]);\n  useEffect(() => {\n    const fetchFilteredPosts = async () => {\n      const {\n        data\n      } = await axios.get(`http://localhost:5002/api/posts/filter?search=${debouncedSearchTerm}`);\n      if (data) {\n        setPosts(data.filteredPosts);\n      }\n    };\n    fetchFilteredPosts();\n  }, [debouncedSearchTerm]);\n  const handleInputChange = e => {\n    setSearchTerm(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"redpage redpage-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchTerm,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), posts.length > 0 ? posts.map(singlePost => {\n      return /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"redpost\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"redpost-image-wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"redpost-image\",\n            src: singlePost.picture,\n            alt: singlePost.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"redpost-overlay\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: singlePost.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: singlePost.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)\n      }, singlePost._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this);\n    }) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Redpage, \"fdSaqlK5T2DEUWI0qfLq8zd63/o=\");\n_c = Redpage;\nexport default Redpage;\nvar _c;\n$RefreshReg$(_c, \"Redpage\");","map":{"version":3,"names":["useEffect","useState","axios","Redpage","posts","setPosts","searchTerm","setSearchTerm","debouncedSearchTerm","setDebouncedSearchTerm","fetchAllPosts","data","get","allPosts","debounceSearch","setTimeout","clearTimeout","fetchFilteredPosts","filteredPosts","handleInputChange","e","target","value","length","map","singlePost","picture","title","description","_id"],"sources":["/Users/j/Desktop/CAB/20Design-MERN/client/src/components/Redpage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction Redpage() {\n  const [posts, setPosts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [debouncedSearchTerm, setDebouncedSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    const fetchAllPosts = async () => {\n      const { data } = await axios.get(\"http://localhost:5002/api/posts/all\");\n\n      if (data) {\n        setPosts(data.allPosts);\n      }\n    };\n\n    fetchAllPosts();\n  }, []);\n\n  useEffect(() => {\n    const debounceSearch = setTimeout(() => {\n      setDebouncedSearchTerm(searchTerm);\n    }, 500);\n\n    return () => {\n      clearTimeout(debounceSearch);\n    };\n  }, [searchTerm]);\n\n  useEffect(() => {\n    const fetchFilteredPosts = async () => {\n      const { data } = await axios.get(\n        `http://localhost:5002/api/posts/filter?search=${debouncedSearchTerm}`\n      );\n\n      if (data) {\n        setPosts(data.filteredPosts);\n      }\n    };\n\n    fetchFilteredPosts();\n  }, [debouncedSearchTerm]);\n\n  const handleInputChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  return (\n    <div className=\"redpage redpage-grid\">\n      <div>\n        <input type=\"text\" value={searchTerm} onChange={handleInputChange} />\n      </div>\n      {posts.length > 0\n        ? posts.map((singlePost) => {\n            return (\n              <article key={singlePost._id} className=\"redpost\">\n                <div className=\"redpost-image-wrap\">\n                  <img\n                    className=\"redpost-image\"\n                    src={singlePost.picture}\n                    alt={singlePost.title}\n                  />\n                  <div className=\"redpost-overlay\">\n                    <p>{singlePost.title}</p>\n                    <p>{singlePost.description}</p>\n                  </div>\n                </div>\n              </article>\n            );\n          })\n        : \"\"}\n    </div>\n  );\n}\n\nexport default Redpage;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,OAAO,GAAG;EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACO,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElED,SAAS,CAAC,MAAM;IACd,MAAMU,aAAa,GAAG,YAAY;MAChC,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,qCAAqC,CAAC;MAEvE,IAAID,IAAI,EAAE;QACRN,QAAQ,CAACM,IAAI,CAACE,QAAQ,CAAC;MACzB;IACF,CAAC;IAEDH,aAAa,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EAENV,SAAS,CAAC,MAAM;IACd,MAAMc,cAAc,GAAGC,UAAU,CAAC,MAAM;MACtCN,sBAAsB,CAACH,UAAU,CAAC;IACpC,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAM;MACXU,YAAY,CAACF,cAAc,CAAC;IAC9B,CAAC;EACH,CAAC,EAAE,CAACR,UAAU,CAAC,CAAC;EAEhBN,SAAS,CAAC,MAAM;IACd,MAAMiB,kBAAkB,GAAG,YAAY;MACrC,MAAM;QAAEN;MAAK,CAAC,GAAG,MAAMT,KAAK,CAACU,GAAG,CAC7B,iDAAgDJ,mBAAoB,EAAC,CACvE;MAED,IAAIG,IAAI,EAAE;QACRN,QAAQ,CAACM,IAAI,CAACO,aAAa,CAAC;MAC9B;IACF,CAAC;IAEDD,kBAAkB,EAAE;EACtB,CAAC,EAAE,CAACT,mBAAmB,CAAC,CAAC;EAEzB,MAAMW,iBAAiB,GAAIC,CAAC,IAAK;IAC/Bb,aAAa,CAACa,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,sBAAsB;IAAA,wBACnC;MAAA,uBACE;QAAO,IAAI,EAAC,MAAM;QAAC,KAAK,EAAEhB,UAAW;QAAC,QAAQ,EAAEa;MAAkB;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACjE,EACLf,KAAK,CAACmB,MAAM,GAAG,CAAC,GACbnB,KAAK,CAACoB,GAAG,CAAEC,UAAU,IAAK;MACxB,oBACE;QAA8B,SAAS,EAAC,SAAS;QAAA,uBAC/C;UAAK,SAAS,EAAC,oBAAoB;UAAA,wBACjC;YACE,SAAS,EAAC,eAAe;YACzB,GAAG,EAAEA,UAAU,CAACC,OAAQ;YACxB,GAAG,EAAED,UAAU,CAACE;UAAM;YAAA;YAAA;YAAA;UAAA,QACtB,eACF;YAAK,SAAS,EAAC,iBAAiB;YAAA,wBAC9B;cAAA,UAAIF,UAAU,CAACE;YAAK;cAAA;cAAA;cAAA;YAAA,QAAK,eACzB;cAAA,UAAIF,UAAU,CAACG;YAAW;cAAA;cAAA;cAAA;YAAA,QAAK;UAAA;YAAA;YAAA;YAAA;UAAA,QAC3B;QAAA;UAAA;UAAA;UAAA;QAAA;MACF,GAXMH,UAAU,CAACI,GAAG;QAAA;QAAA;QAAA;MAAA,QAYlB;IAEd,CAAC,CAAC,GACF,EAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAvEQ1B,OAAO;AAAA,KAAPA,OAAO;AAyEhB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}