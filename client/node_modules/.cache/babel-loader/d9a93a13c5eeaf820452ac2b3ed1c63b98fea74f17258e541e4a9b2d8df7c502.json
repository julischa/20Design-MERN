{"ast":null,"code":"var _jsxFileName = \"/Users/j/Desktop/CAB/20Design-MERN/client/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport Carddeck from \"./components/Carddeck\";\nimport Navbar from \"./components/Navbar.js\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport DesignersList from \"./components/DesignersList\";\nimport DesignerDetails from \"./pages/DesignerDetails\";\n// import CreateContent from \"./pages/CreateContent.js\";\nimport Footer from \"./components/Footer\";\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\nimport React, { useState } from \"react\";\nimport Modal from \"./components/Modal\";\n\n//Raul create Register component with own route in app\n//Raul create Login component with own route in app\n//Raul implement JWT : generate token function, and send the token to the client in login's response\n//Raul store token in front end and build function to check if token is stored after every refresh (which will mean that user is logged in)\n//Raul server getProfile route , that recieves the Token from client, and cheks it with Passport...\n//Raul create User Profile component with own route in app\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false); // Define isOpen and setIsOpen using useState\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Carddeck, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/designers\",\n          element: /*#__PURE__*/_jsxDEV(DesignersList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/designers/:designerName\",\n          element: /*#__PURE__*/_jsxDEV(DesignerDetails, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Carddeck","Navbar","BrowserRouter","Route","Routes","DesignersList","DesignerDetails","Footer","Register","Login","React","useState","Modal","App","isOpen","setIsOpen"],"sources":["/Users/j/Desktop/CAB/20Design-MERN/client/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport Carddeck from \"./components/Carddeck\";\nimport Navbar from \"./components/Navbar.js\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport DesignersList from \"./components/DesignersList\";\nimport DesignerDetails from \"./pages/DesignerDetails\";\n// import CreateContent from \"./pages/CreateContent.js\";\nimport Footer from \"./components/Footer\";\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\nimport React, { useState } from \"react\";\nimport Modal from \"./components/Modal\";\n\n//Raul create Register component with own route in app\n//Raul create Login component with own route in app\n//Raul implement JWT : generate token function, and send the token to the client in login's response\n//Raul store token in front end and build function to check if token is stored after every refresh (which will mean that user is logged in)\n//Raul server getProfile route , that recieves the Token from client, and cheks it with Passport...\n//Raul create User Profile component with own route in app\n\nfunction App() {\n  const [isOpen, setIsOpen] = useState(false); // Define isOpen and setIsOpen using useState\n\n  return (\n    <>\n      <BrowserRouter>\n        <Navbar />\n        <Routes>\n          <Route path=\"/\" element={<Carddeck />} />\n          <Route path=\"/designers\" element={<DesignersList />} />\n          <Route\n            path=\"/designers/:designerName\"\n            element={<DesignerDetails />}\n          />\n          <Route path=\"/register\" element={<Register />} />\n          <Route path=\"/login\" element={<Login />} />\n          {/* <Route path=\"/\" element={<CreateContent />} /> */}\n        </Routes>\n      </BrowserRouter>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,SAASC,aAAa,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAC/D,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,eAAe,MAAM,yBAAyB;AACrD;AACA,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,oBAAoB;;AAEtC;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE7C,oBACE;IAAA,wBACE,QAAC,aAAa;MAAA,wBACZ,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACV,QAAC,MAAM;QAAA,wBACL,QAAC,KAAK;UAAC,IAAI,EAAC,GAAG;UAAC,OAAO,eAAE,QAAC,QAAQ;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG,eACzC,QAAC,KAAK;UAAC,IAAI,EAAC,YAAY;UAAC,OAAO,eAAE,QAAC,aAAa;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG,eACvD,QAAC,KAAK;UACJ,IAAI,EAAC,0BAA0B;UAC/B,OAAO,eAAE,QAAC,eAAe;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAC7B,eACF,QAAC,KAAK;UAAC,IAAI,EAAC,WAAW;UAAC,OAAO,eAAE,QAAC,QAAQ;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG,eACjD,QAAC,KAAK;UAAC,IAAI,EAAC,QAAQ;UAAC,OAAO,eAAE,QAAC,KAAK;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAEpC;IAAA;MAAA;MAAA;MAAA;IAAA,QACK,eAChB,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACT;AAEP;AAAC,GAtBQE,GAAG;AAAA,KAAHA,GAAG;AAwBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}